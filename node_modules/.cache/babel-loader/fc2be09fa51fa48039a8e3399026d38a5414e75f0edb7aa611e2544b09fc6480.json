{"ast":null,"code":"import { jsPDF } from 'jspdf';\nexport const exportResultsAsPDF = (result, algorithm, config = {}) => {\n  const doc = new jsPDF();\n  let yPos = 20;\n  const lineHeight = 10;\n\n  // Title\n  doc.setFontSize(16);\n  doc.text('CPU Scheduler Simulation Results', 20, yPos);\n  yPos += lineHeight * 2;\n\n  // Algorithm Info\n  doc.setFontSize(12);\n  doc.text(`Algorithm: ${algorithm}`, 20, yPos);\n  yPos += lineHeight;\n  if (algorithm === 'RoundRobin' && config.timeQuantum) {\n    doc.text(`Time Quantum: ${config.timeQuantum}`, 20, yPos);\n    yPos += lineHeight;\n  }\n  if (algorithm === 'Priority') {\n    doc.text(`Mode: ${config.isPreemptive ? 'Preemptive' : 'Non-preemptive'}`, 20, yPos);\n    yPos += lineHeight;\n  }\n  yPos += lineHeight;\n\n  // Average Metrics\n  doc.text('Average Metrics:', 20, yPos);\n  yPos += lineHeight;\n  doc.text(`Waiting Time: ${result.averageWaitingTime.toFixed(2)}`, 30, yPos);\n  yPos += lineHeight;\n  doc.text(`Turnaround Time: ${result.averageTurnaroundTime.toFixed(2)}`, 30, yPos);\n  yPos += lineHeight;\n  doc.text(`Response Time: ${result.averageResponseTime.toFixed(2)}`, 30, yPos);\n  yPos += lineHeight * 2;\n\n  // Process Details\n  doc.text('Process Details:', 20, yPos);\n  yPos += lineHeight;\n\n  // Table headers\n  const headers = ['Process', 'AT', 'BT', 'CT', 'TAT', 'WT', 'RT'];\n  const colWidth = 25;\n  let xPos = 20;\n  headers.forEach(header => {\n    doc.text(header, xPos, yPos);\n    xPos += colWidth;\n  });\n  yPos += lineHeight;\n\n  // Table content\n  result.processes.forEach(process => {\n    var _process$completionTi, _process$turnaroundTi, _process$waitingTime, _process$responseTime;\n    xPos = 20;\n    doc.text(process.id, xPos, yPos);\n    xPos += colWidth;\n    doc.text(process.arrivalTime.toString(), xPos, yPos);\n    xPos += colWidth;\n    doc.text(process.burstTime.toString(), xPos, yPos);\n    xPos += colWidth;\n    doc.text(((_process$completionTi = process.completionTime) === null || _process$completionTi === void 0 ? void 0 : _process$completionTi.toString()) || '-', xPos, yPos);\n    xPos += colWidth;\n    doc.text(((_process$turnaroundTi = process.turnaroundTime) === null || _process$turnaroundTi === void 0 ? void 0 : _process$turnaroundTi.toString()) || '-', xPos, yPos);\n    xPos += colWidth;\n    doc.text(((_process$waitingTime = process.waitingTime) === null || _process$waitingTime === void 0 ? void 0 : _process$waitingTime.toString()) || '-', xPos, yPos);\n    xPos += colWidth;\n    doc.text(((_process$responseTime = process.responseTime) === null || _process$responseTime === void 0 ? void 0 : _process$responseTime.toString()) || '-', xPos, yPos);\n    yPos += lineHeight;\n\n    // Add new page if needed\n    if (yPos > 270) {\n      doc.addPage();\n      yPos = 20;\n    }\n  });\n\n  // Save the PDF\n  doc.save(`cpu-scheduler-${algorithm.toLowerCase()}-results.pdf`);\n};","map":{"version":3,"names":["jsPDF","exportResultsAsPDF","result","algorithm","config","doc","yPos","lineHeight","setFontSize","text","timeQuantum","isPreemptive","averageWaitingTime","toFixed","averageTurnaroundTime","averageResponseTime","headers","colWidth","xPos","forEach","header","processes","process","_process$completionTi","_process$turnaroundTi","_process$waitingTime","_process$responseTime","id","arrivalTime","toString","burstTime","completionTime","turnaroundTime","waitingTime","responseTime","addPage","save","toLowerCase"],"sources":["C:/Users/ayush/OneDrive/Desktop/Job Scheduler/src/utils/exportUtils.ts"],"sourcesContent":["import { jsPDF } from 'jspdf';\nimport { Process, SchedulerResult, SchedulingAlgorithm } from './types';\n\nexport const exportResultsAsPDF = (\n    result: SchedulerResult,\n    algorithm: SchedulingAlgorithm,\n    config: { timeQuantum?: number; isPreemptive?: boolean } = {}\n) => {\n    const doc = new jsPDF();\n    let yPos = 20;\n    const lineHeight = 10;\n\n    // Title\n    doc.setFontSize(16);\n    doc.text('CPU Scheduler Simulation Results', 20, yPos);\n    yPos += lineHeight * 2;\n\n    // Algorithm Info\n    doc.setFontSize(12);\n    doc.text(`Algorithm: ${algorithm}`, 20, yPos);\n    yPos += lineHeight;\n\n    if (algorithm === 'RoundRobin' && config.timeQuantum) {\n        doc.text(`Time Quantum: ${config.timeQuantum}`, 20, yPos);\n        yPos += lineHeight;\n    }\n\n    if (algorithm === 'Priority') {\n        doc.text(`Mode: ${config.isPreemptive ? 'Preemptive' : 'Non-preemptive'}`, 20, yPos);\n        yPos += lineHeight;\n    }\n\n    yPos += lineHeight;\n\n    // Average Metrics\n    doc.text('Average Metrics:', 20, yPos);\n    yPos += lineHeight;\n    doc.text(`Waiting Time: ${result.averageWaitingTime.toFixed(2)}`, 30, yPos);\n    yPos += lineHeight;\n    doc.text(`Turnaround Time: ${result.averageTurnaroundTime.toFixed(2)}`, 30, yPos);\n    yPos += lineHeight;\n    doc.text(`Response Time: ${result.averageResponseTime.toFixed(2)}`, 30, yPos);\n    yPos += lineHeight * 2;\n\n    // Process Details\n    doc.text('Process Details:', 20, yPos);\n    yPos += lineHeight;\n\n    // Table headers\n    const headers = ['Process', 'AT', 'BT', 'CT', 'TAT', 'WT', 'RT'];\n    const colWidth = 25;\n    let xPos = 20;\n\n    headers.forEach(header => {\n        doc.text(header, xPos, yPos);\n        xPos += colWidth;\n    });\n    yPos += lineHeight;\n\n    // Table content\n    result.processes.forEach(process => {\n        xPos = 20;\n        doc.text(process.id, xPos, yPos);\n        xPos += colWidth;\n        doc.text(process.arrivalTime.toString(), xPos, yPos);\n        xPos += colWidth;\n        doc.text(process.burstTime.toString(), xPos, yPos);\n        xPos += colWidth;\n        doc.text(process.completionTime?.toString() || '-', xPos, yPos);\n        xPos += colWidth;\n        doc.text(process.turnaroundTime?.toString() || '-', xPos, yPos);\n        xPos += colWidth;\n        doc.text(process.waitingTime?.toString() || '-', xPos, yPos);\n        xPos += colWidth;\n        doc.text(process.responseTime?.toString() || '-', xPos, yPos);\n        yPos += lineHeight;\n\n        // Add new page if needed\n        if (yPos > 270) {\n            doc.addPage();\n            yPos = 20;\n        }\n    });\n\n    // Save the PDF\n    doc.save(`cpu-scheduler-${algorithm.toLowerCase()}-results.pdf`);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}